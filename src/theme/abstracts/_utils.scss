@use 'sass:math';
// ---------------------------
// COMMON
// ---------------------------
// * replace substring with another string
// credits: https://css-tricks.com/snippets/sass/str-replace-function/
@function str-replace($string, $search, $replace: '') {
	$index: str-index($string, $search);

	@if $index {
		@return str-slice($string, 1, $index - 1) + $replace +
			str-replace(
				str-slice($string, $index + str-length($search)),
				$search,
				$replace
			);
	}

	@return $string;
}
// ---------------------------
// Color functions and mixins
// ---------------------------
//
// * Define color vars ass css custom property
@mixin defineColorHSL($color, $hue, $saturation, $lightness) {
	#{$color}: unquote('hsl(#{$hue}, #{$saturation}, #{$lightness})');
	#{$color}-h: #{$hue};
	#{$color}-s: #{$saturation};
	#{$color}-l: #{$lightness};
}

// * return css color variable with different Saturation value
//  use:  background-color: saturation(var(--color-primary), 1.2);
@function saturation($color-var, $saturationMultiplier) {
	$color-var: str-replace($color-var, 'var(');
	$color-var: str-replace($color-var, ')');
	$color-var-h: var(#{$color-var + '-h'});
	$color-var-s: var(#{$color-var + '-s'});
	$color-var-l: var(#{$color-var + '-l'});
	@return hsl(
		$color-var-h,
		calc(#{$color-var-s} * #{$saturationMultiplier}),
		$color-var-l
	);
}
// * return css color variable with different lightness value
//  use:  background-color: lightness(var(--color-primary), 1.2);
@function lightness($color-var, $lightnessMultiplier) {
	$color-var: str-replace($color-var, 'var(');
	$color-var: str-replace($color-var, ')');
	$color-var-h: var(#{$color-var + '-h'});
	$color-var-s: var(#{$color-var + '-s'});
	$color-var-l: var(#{$color-var + '-l'});
	@return hsl(
		$color-var-h,
		$color-var-s,
		calc(#{$color-var-l} * #{$lightnessMultiplier})
	);
}
// * return css color variable with different alpha value
//  use:  background-color: alpha(var(--color-primary), 0.2);
@function alpha($color-var, $alpha-val) {
	$color-var: str-replace($color-var, 'var(');
	$color-var: str-replace($color-var, ')');
	$color-var-h: var(#{$color-var + '-h'});
	$color-var-s: var(#{$color-var + '-s'});
	$color-var-l: var(#{$color-var + '-l'});
	@return hsla($color-var-h, $color-var-s, $color-var-l, $alpha-val);
}

// get points on circle
@function getPoints($angle, $rx, $ry: 0) {
	@if ($ry == 0) {
		$ry: $rx;
	}
	$angleInRad: math.div($angle * math.$pi, 180);
	$x: $rx * math.cos($angleInRad);
	$y: $ry * math.sin($angleInRad);
	@return translate($x * 1rem, $y * 1rem);
}
